plugins {
    id "java"
    id "maven-publish"
    id "io.freefair.lombok" version "8.14.2"
    id "com.gradleup.shadow" version "9.0.2"
    id "io.papermc.paperweight.userdev" version "2.0.0-beta.18" apply false
    id "com.diffplug.spotless" version "7.2.1" apply false
}

group = "kr.rtustudio"
version = plugin_version

allprojects {

    apply plugin: "java"
    apply plugin: "io.freefair.lombok"
    apply plugin: "com.gradleup.shadow"
    apply plugin: "com.diffplug.spotless"

    repositories {
        mavenCentral()
        maven {
            url = uri("https://jitpack.io")
        }
        maven {
            url = uri("https://mvnrepository.com/artifact/org.projectlombok/lombok")
        }
        maven {
            name = "AlessioDP"
            url = uri("https://repo.alessiodp.com/snapshots/")
        }
        maven {
            name = "spigotmc-repo"
            url = uri("https://hub.spigotmc.org/nexus/content/repositories/snapshots/")
        }
        maven {
            name = "papermc"
            url = uri("https://repo.papermc.io/repository/maven-public/")
        }
        maven {
            name = "sonatype"
            url = uri("https://oss.sonatype.org/content/groups/public/")
        }
        maven {
            name = "CodeMC"
            url = uri("https://repo.codemc.io/repository/maven-public/")
        }

        maven {
            url = uri("https://repo.viaversion.com")
        }
        maven {
            url = uri("https://repo.oraxen.com/releases")
        }
        maven {
            url = uri("https://nexus.phoenixdevt.fr/repository/maven-public/")
        }
        maven {
            url = uri("https://repo.nexomc.com/releases/")
        }
        maven {
            url = uri("https://repo.auxilor.io/repository/maven-public/")
        }
        maven {
            url = uri("https://repo.extendedclip.com/content/repositories/placeholderapi/")
        }
        maven {
            url = uri("https://repo.dmulloy2.net/repository/public/")
        }
        maven {
            name = "essentialsx"
            url = uri("https://repo.essentialsx.net/releases")
        }
        maven {
            name = "GeyserMC Fork of SpongePowered/Configurate"
            url = uri("https://repo.opencollab.dev/maven-snapshots")
        }
    }

    dependencies {
        compileOnly "org.quartz-scheduler:quartz:2.5.0"

        compileOnly "net.kyori:adventure-text-minimessage:4.16.0"
        compileOnly "com.google.code.gson:gson:2.13.1"
        compileOnly "com.google.guava:guava:33.4.8-jre"
        compileOnly "org.apache.commons:commons-lang3:3.18.0"
        compileOnly "org.xerial.snappy:snappy-java:1.1.10.8"
        compileOnly "org.slf4j:slf4j-api:2.0.17"

        compileOnly "org.projectlombok:lombok:1.18.38"
    }

    spotless {
        java {
            target "src/**/*.java"
            googleJavaFormat("1.22.0").aosp()
            removeUnusedImports()
            importOrder "", "java", "javax", "org", "com"
            trimTrailingWhitespace()
            endWithNewline()
        }

        format("gradle") {
            target "**/*.gradle"
            trimTrailingWhitespace()
            leadingTabsToSpaces(4)
            endWithNewline()
        }

        format("misc") {
            target "**/*.md", "**/*.yml", "**/*.yaml", "**/*.json", "**/.gitignore"
            trimTrailingWhitespace()
            endWithNewline()
        }
    }

    java {
        def javaVersion = JavaVersion.toVersion(java_version as Integer)
        sourceCompatibility = javaVersion
        targetCompatibility = javaVersion
        if (JavaVersion.current() < javaVersion) toolchain.languageVersion = JavaLanguageVersion.of(java_version as Integer)
    }

    tasks.withType(JavaCompile).configureEach {
        options.release = java_version as Integer
    }
}

jar {
    finalizedBy(shadowJar)
}

dependencies {
    implementation project(":Framework")
    implementation project(":Platform:Bungee")
    implementation project(":Platform:Velocity")

    implementation "com.alessiodp.libby:libby-bukkit:2.0.0-SNAPSHOT"
    implementation "com.alessiodp.libby:libby-bungee:2.0.0-SNAPSHOT"
    implementation "com.alessiodp.libby:libby-velocity:2.0.0-SNAPSHOT"
    implementation "net.kyori:adventure-platform-bukkit:4.4.1"

    compileOnly "org.projectlombok:lombok:1.18.38"
    annotationProcessor "org.projectlombok:lombok:1.18.38"
}


// Plugin Build
shadowJar {
    file("$rootDir/builds").delete()

    archiveClassifier.set(null)
    archiveBaseName.set(plugin_name)
    archiveVersion.set(plugin_version)

    exclude "META-INF/**"
    exclude "classpath.index"

    relocate "org.reflections", "kr.rtustudio.cdi.reflections"
    relocate "net.kyori.adventure.platform.bukkit", "kr.rtustudio.framework.bukkit.kyori"
    relocate "de.tr7zw.changeme.nbtapi", "kr.rtustudio.framework.bukkit.api.nbt"
    relocate "org.spongepowered.configurate", "kr.rtustudio.configurate"
    relocate "org.bstats", "kr.rtustudio.framework.bstats"

    doLast {
        copy {
            from archiveFile.get().asFile into file("$rootDir/builds/plugin")
        }
    }
}

publishing {
    repositories {
        maven {
            url = uri("https://repo.codemc.io/repository/rtustudio/")

            credentials {
                username = System.getenv("MAVEN_USERNAME")
                password = System.getenv("MAVEN_PASSWORD")
            }
        }
    }

    publications {
        plugin(MavenPublication) { publication ->
            groupId = "kr.rtustudio"
            artifactId = "framework-plugin"
            version = plugin_version
                    =
                    from components.shadow
        }
    }
}
